1.
clc
clear

A = [2 4; 3 5];
B = [8; 15];

A = [A;eye(2)] %putting identity index for equation x=0 and y=0
B = [B; 0; 0] %for x=0,y=0

%for plotting the lines
x = 0 : max(B);
for i = 1:size(A,1)
    y = (B(i)-A(i,1)*x)/A(i,2);
    y = max(y,0);
    plot(x,y)    
    hold on
end

%for finding the intersection line
pt=[]; 
for i = 1:size(A,1)
    for j = i+1:size(A,1)
        AA=[A(i,:);A(j,:)];
        BB=[B(i,:);B(j,:)];
        xx = inv(AA)*BB;
        if xx>=0
            pt=[pt,xx];
        end
    end
end

pt
ans
res=0;

%for finding the optimal solution
for i=1:size(pt,1)
    r = 3*pt(1,i)+2*pt(2,i);
    if r>res
        res=r;
        ans=pt(:,i);
    end
end
res
ans

2.
clc
clear
format short
A = [2 3 -1 4; 1 -2 6 -7];
B = [8; -3];
C = [2 3 4 7];
[m,n]=size(A)

%possible pairs
nCm=nchoosek(n,m)
pair =nchoosek(1:n,m)

%finding the basic solution and basic feasible solution
bfs=[];
bs=[];
for i=1:nCm
    cols = pair(i,:);
    A_pair = A(:,cols)
    
    if det(A_pair)~=0
        xx = inv(A_pair)*B;
        bs=[bs xx];
        if xx>=0
            % creating a column vector with zeros
            xx_new = zeros(n,1);
            % assigning the original value to the corresponding index
            xx_new(cols) = xx;
            bfs=[bfs xx_new];
        end
    end
end
bs
bfs

pt = []
m;
res = 0;
for i=1:size(bfs,1)
    m = C*bfs(:,i);
    if(m>res)
        res=m;
        pt=bfs(:,i);
    end
end
res
pt

3.
clc
clear
A = [1 0 -3; 2 -8 3; 1 1 0];
B = [4; 4; -7];
C = [2 -3 6];
sign = [-1; 1; 0];
%-1 is less than, 0 is equal to and 1 is greater than
for i=1:size(A,1)
    if(B(i)<0)
        B(i)=abs(B(i));
        A(i,:)=-1*A(i,:);
        sign(i)=-1*sign(i);
    end
end

sign = diag(sign);
A = [A sign];
A = A(:, any(A));
A
